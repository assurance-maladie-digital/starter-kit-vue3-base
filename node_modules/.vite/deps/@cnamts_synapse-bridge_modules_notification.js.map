{
  "version": 3,
  "sources": ["../../.pnpm/@cnamts+synapse-bridge@1.4.1-alpha.0_vue@3.4.30_vuetify@3.6.10_vuex@4.1.0/node_modules/@cnamts/synapse-bridge/src/modules/notification/notify.ts", "../../.pnpm/@cnamts+synapse-bridge@1.4.1-alpha.0_vue@3.4.30_vuetify@3.6.10_vuex@4.1.0/node_modules/@cnamts/synapse-bridge/src/modules/notification/index.ts"],
  "sourcesContent": ["import { Commit } from 'vuex';\n\nimport { NotificationState, NotificationObj } from './types';\n\n/** Commit mutation to add a notification */\nexport function notify(commit: Commit, state: NotificationState, notification: NotificationObj): void {\n\tif (state.notification) {\n\t\tcommit('CLEAR');\n\n\t\tsetTimeout(() => commit('ADD', notification), 250);\n\n\t\treturn;\n\t}\n\n\tcommit('ADD', notification);\n}\n", "import { Module, ActionTree, MutationTree, GetterTree } from 'vuex';\n\nimport { RootState } from '../';\nimport { NotificationState, NotificationObj } from './types';\n\nimport { notify } from './notify';\n\nexport const state: NotificationState = {\n\tnotification: null,\n};\n\nexport const actions: ActionTree<NotificationState, RootState> = {\n\tadd({ commit, state}: { commit: any, state: any }, notification: NotificationObj) {\n\t\tnotify(commit, state, notification);\n\t},\n\taddNotification({ commit, state }: { commit: any, state: any }, notification: NotificationObj) {\n\t\tnotify(commit, state, notification);\n\t},\n\tclear({ commit }: { commit: any}) {\n\t\tcommit('CLEAR');\n\t},\n\tclearNotification({ commit } : { commit: any}) {\n\t\tcommit('CLEAR');\n\t},\n};\n\n\nexport const mutations: MutationTree<NotificationState> = {\n\tADD(state: any, notification: NotificationObj) {\n\t\tstate.notification = notification;\n\t},\n\tCLEAR(state: any) {\n\t\tstate.notification = null;\n\t},\n};\n\nexport const getters: GetterTree<NotificationState, RootState> = {\n\tnotification: (state :any) => state.notification,\n};\nexport const notification: Module<NotificationState, RootState> = {\n\tnamespaced: true,\n\tstate,\n\tactions,\n\tmutations,\n\tgetters,\n};\n"],
  "mappings": ";AAKO,SAAS,OAAO,QAAgBA,QAA0BC,eAAqC;AACrG,MAAID,OAAM,cAAc;AACvB,WAAO,OAAO;AAEd,eAAW,MAAM,OAAO,OAAOC,aAAY,GAAG,GAAG;AAEjD;AAAA,EACD;AAEA,SAAO,OAAOA,aAAY;AAC3B;;;ACRO,IAAM,QAA2B;AAAA,EACvC,cAAc;AACf;AAEO,IAAM,UAAoD;AAAA,EAChE,IAAI,EAAE,QAAQ,OAAAC,OAAK,GAAgCC,eAA+B;AACjF,WAAO,QAAQD,QAAOC,aAAY;AAAA,EACnC;AAAA,EACA,gBAAgB,EAAE,QAAQ,OAAAD,OAAM,GAAgCC,eAA+B;AAC9F,WAAO,QAAQD,QAAOC,aAAY;AAAA,EACnC;AAAA,EACA,MAAM,EAAE,OAAO,GAAmB;AACjC,WAAO,OAAO;AAAA,EACf;AAAA,EACA,kBAAkB,EAAE,OAAO,GAAoB;AAC9C,WAAO,OAAO;AAAA,EACf;AACD;AAGO,IAAM,YAA6C;AAAA,EACzD,IAAID,QAAYC,eAA+B;AAC9C,IAAAD,OAAM,eAAeC;AAAA,EACtB;AAAA,EACA,MAAMD,QAAY;AACjB,IAAAA,OAAM,eAAe;AAAA,EACtB;AACD;AAEO,IAAM,UAAoD;AAAA,EAChE,cAAc,CAACA,WAAeA,OAAM;AACrC;AACO,IAAM,eAAqD;AAAA,EACjE,YAAY;AAAA,EACZ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD;",
  "names": ["state", "notification", "state", "notification"]
}
